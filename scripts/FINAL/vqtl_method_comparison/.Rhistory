axis.text.x = element_text(hjust=1,angle=30)) +
scale_fill_manual(values=c('black','steelblue2'),labels=c('No','Yes')) +
scale_x_discrete(labels=c(expression('Normal, '*V[G]*'=0.01'),
expression('Normal, '*V[G]*'=0.02'),
expression('Normal, '*V[G]*'=0.03'),
expression('Non-normal,'*V[G]*'=0.01'),
expression('Non-normal,'*V[G]*'=0.02'),
expression('Non-normal,'*V[G]*'=0.03')
)) +
scale_x_continuous(breaks=c(0,0.25,0.5,0.75,0.1),limits=c(0,1.1))
g <- ggplot(tmp.save,aes(x=Name,y=value,fill=variable)) +
geom_bar(stat='identity',position = 'dodge',col='black') +
theme_bw() +
labs(x='Simulation',y='vQTL power',fill='muQTL?') +
theme(panel.grid = element_blank(),
axis.text.x = element_text(hjust=1,angle=30)) +
scale_fill_manual(values=c('black','steelblue2'),labels=c('No','Yes')) +
scale_x_discrete(labels=c(expression('Normal, '*V[G]*'=0.01'),
expression('Normal, '*V[G]*'=0.02'),
expression('Normal, '*V[G]*'=0.03'),
expression('Non-normal,'*V[G]*'=0.01'),
expression('Non-normal,'*V[G]*'=0.02'),
expression('Non-normal,'*V[G]*'=0.03')
)) +
scale_y_continuous(breaks=c(0,0.25,0.5,0.75,0.1),limits=c(0,1.1))
g
g <- ggplot(tmp.save,aes(x=Name,y=value,fill=variable)) +
geom_bar(stat='identity',position = 'dodge',col='black') +
theme_bw() +
labs(x='Simulation',y='vQTL power',fill='muQTL?') +
theme(panel.grid = element_blank(),
axis.text.x = element_text(hjust=1,angle=30)) +
scale_fill_manual(values=c('black','steelblue2'),labels=c('No','Yes')) +
scale_x_discrete(labels=c(expression('Normal, '*V[G]*'=0.01'),
expression('Normal, '*V[G]*'=0.02'),
expression('Normal, '*V[G]*'=0.03'),
expression('Non-normal,'*V[G]*'=0.01'),
expression('Non-normal,'*V[G]*'=0.02'),
expression('Non-normal,'*V[G]*'=0.03')
)) +
scale_y_continuous(breaks=c(0,0.25,0.5,0.75,1),limits=c(0,1.1))
g
# lims(y=c(0,1.1));
png('~/Documents/Research/vQTL/ukb_vqtl/output/simulation/barplot_muqtl_vqtl.png',width=4150,height=2660,res=600)
print(g)
dev.off()
tmp.full <- do.call(rbind,tmp)
tmp.save <- melt(tmp.full[,c(1,2,4,5)],id.vars=c('noise','h'))
tmp.save$Name <- paste(tmp.save$noise,tmp.save$h,sep=': h = ')
tmp.save$Name <- factor(tmp.save$Name,tmp.save$Name[1:6])
tmp.full
library(data.table)
library(ggplot2)
library(cowplot)
library(reshape2)
# parameters
MAF1 <- 0.4
# MAF1 <- 0.1
MAF2 <- 0.4
nsim <- 1000;
nindiv <- 10000
simulation_type='gxg'
genetic_variance_explained.vec <- seq(0.01,0.1,by=0.01);
simulation_type <- 'gxg'
phenotype_noise <- 'NORMAL'
dir='/Users/andrewmarderstein/Documents/Research/vQTL/ukb_vqtl/output/simulation/'
f=paste0(dir,'MAF1_',MAF1,'.MAF2_',MAF2,'.NSIM_',nsim,'.NINDIV_',nindiv,'.TYPE_',simulation_type,'.NOISE_',phenotype_noise,'.txt')
df1 <- fread(f,data.table = F,stringsAsFactors = F)
phenotype_noise <- 'CHISQ4'
dir='/Users/andrewmarderstein/Documents/Research/vQTL/ukb_vqtl/output/simulation/'
f=paste0(dir,'MAF1_',MAF1,'.MAF2_',MAF2,'.NSIM_',nsim,'.NINDIV_',nindiv,'.TYPE_',simulation_type,'.NOISE_',phenotype_noise,'.txt')
df2 <- fread(f,data.table = F,stringsAsFactors = F)
df.mg <- rbind(df1,df2)
simulation_type <- 'mean'
phenotype_noise <- 'NORMAL'
dir='/Users/andrewmarderstein/Documents/Research/vQTL/ukb_vqtl/output/simulation/'
f=paste0(dir,'MAF1_',MAF1,'.MAF2_',MAF2,'.NSIM_',nsim,'.NINDIV_',nindiv,'.TYPE_',simulation_type,'.NOISE_',phenotype_noise,'.txt')
df1 <- fread(f,data.table = F,stringsAsFactors = F)
df.mg <- rbind(df.mg,df1)
phenotype_noise <- 'CHISQ4'
dir='/Users/andrewmarderstein/Documents/Research/vQTL/ukb_vqtl/output/simulation/'
f=paste0(dir,'MAF1_',MAF1,'.MAF2_',MAF2,'.NSIM_',nsim,'.NINDIV_',nindiv,'.TYPE_',simulation_type,'.NOISE_',phenotype_noise,'.txt')
df2 <- fread(f,data.table = F,stringsAsFactors = F)
df.mg <- rbind(df.mg,df2)
rm(df1);rm(df2)
# ggplot(df.mg,aes(x=as.factor(h),y=beta,fill=noise)) + geom_boxplot(alpha=0.5) + theme_bw() + theme(panel.grid = element_blank()) + labs(x='Variance Explained by GxG',y=expression(beta['var']))# +
gA <- ggplot(subset(df.mg,noise=='NORMAL' & type=='gxg'),aes(x=as.factor(h),y=beta,fill=h)) + geom_boxplot(alpha=0.5) + theme_bw() + theme(panel.grid = element_blank(),legend.position = 'none') + labs(x='Variance explained by simulated GxG',y=expression(beta['var'])) +
scale_fill_continuous(low='yellow',high='red')
gB <- ggplot(subset(df.mg,noise=='NORMAL' & type=='mean'),aes(x=as.factor(h),y=beta,fill=h)) + geom_boxplot(alpha=0.5) + theme_bw() + theme(panel.grid = element_blank(),legend.position = 'none') + labs(x='Variance explained by simulated mean QTL',y=expression(beta['var'])) +
scale_fill_continuous(low='yellow',high='red')
gA
df.aggre <- aggregate(.~MAF1+MAF2+N+noise+h+type,df.mg[,-c(7)],function(x) {mean(x < 0.05)})
df.aggre.melt <- melt(df.aggre[,c(4:ncol(df.aggre))],id.vars=c('h','noise','type'))
g2 <- ggplot(subset(df.aggre.melt,noise=='NORMAL' & type=='gxg'),aes(x=h,y=value,col=variable)) + geom_line() + geom_point() + theme_bw() + theme(panel.grid = element_blank()) + labs(x='Variance Explained by GxG',y='Power') + scale_color_brewer(palette='Dark2') + theme(legend.title = element_blank())
g3 <- ggplot(subset(df.aggre.melt,noise=='CHISQ4' & type=='gxg'),aes(x=h,y=value,col=variable)) + geom_line() + geom_point() + theme_bw() + theme(panel.grid = element_blank()) + labs(x='Variance Explained by GxG',y='Power') + scale_color_brewer(palette='Dark2') + theme(legend.title = element_blank())
g4 <- ggplot(subset(df.aggre.melt,noise=='NORMAL' & type=='mean'),aes(x=h,y=value,col=variable)) + geom_line() + geom_point() + theme_bw() + theme(panel.grid = element_blank()) + labs(x='Variance Explained by mean QTL',y='False Positive Rate') + geom_abline(slope=0,intercept=0.05,col='red',linetype='dashed') + scale_color_brewer(palette='Dark2') + theme(legend.title = element_blank())
g5 <- ggplot(subset(df.aggre.melt,noise=='CHISQ4' & type=='mean'),aes(x=h,y=value,col=variable)) + geom_line() + geom_point() + theme_bw() + theme(panel.grid = element_blank()) + labs(x='Variance Explained by mean QTL',y='False Positive Rate') + geom_abline(slope=0,intercept=0.05,col='red',linetype='dashed') + scale_color_brewer(palette='Dark2')+ theme(legend.title = element_blank())
plot_grid(g2,g3,g4,g5,ncol=2)
g2 <- ggplot(subset(df.aggre.melt,noise=='NORMAL' & type=='gxg'),aes(x=h,y=value,col=variable)) + geom_line() + geom_point() + theme_bw() + theme(panel.grid = element_blank()) + labs(x='Variance explained by interaction effect',y='Power') + scale_color_brewer(palette='Dark2') + theme(legend.title = element_blank())
g3 <- ggplot(subset(df.aggre.melt,noise=='CHISQ4' & type=='gxg'),aes(x=h,y=value,col=variable)) + geom_line() + geom_point() + theme_bw() + theme(panel.grid = element_blank()) + labs(x='Variance explained by interaction effect',y='Power') + scale_color_brewer(palette='Dark2') + theme(legend.title = element_blank())
g4 <- ggplot(subset(df.aggre.melt,noise=='NORMAL' & type=='mean'),aes(x=h,y=value,col=variable)) + geom_line() + geom_point() + theme_bw() + theme(panel.grid = element_blank()) + labs(x='Variance explained by mean SNP effect',y='False Positive Rate') + geom_abline(slope=0,intercept=0.05,col='red',linetype='dashed') + scale_color_brewer(palette='Dark2') + theme(legend.title = element_blank())
g5 <- ggplot(subset(df.aggre.melt,noise=='CHISQ4' & type=='mean'),aes(x=h,y=value,col=variable)) + geom_line() + geom_point() + theme_bw() + theme(panel.grid = element_blank()) + labs(x='Variance explained by mean SNP effect',y='False Positive Rate') + geom_abline(slope=0,intercept=0.05,col='red',linetype='dashed') + scale_color_brewer(palette='Dark2')+ theme(legend.title = element_blank())
f='~/Documents/Research/vQTL/ukb_vqtl/output/simulation/power_fpr_plots.png'
png(f,width=5000,height=5000,res=500)
plot_grid(g2,g3,g4,g5,ncol=2)
dev.off()
g2 <- ggplot(subset(df.aggre.melt,noise=='NORMAL' & type=='gxg' & variable%in%c('LT','DRM')),aes(x=h,y=value,col=variable)) + geom_line() + geom_point(size=rel(0.8)) + theme_bw() + theme(panel.grid = element_blank()) + labs(x='Variance Explained by GxG',y='Power') + scale_color_brewer(palette='Dark2')+ theme(legend.title = element_blank())
g3 <- ggplot(subset(df.aggre.melt,noise=='CHISQ4' & type=='gxg' & variable%in%c('LT','DRM')),aes(x=h,y=value,col=variable)) + geom_line() + geom_point(size=rel(0.8)) + theme_bw() + theme(panel.grid = element_blank()) + labs(x='Variance Explained by GxG',y='Power') + scale_color_brewer(palette='Dark2')+ theme(legend.title = element_blank())
f='~/Documents/Research/vQTL/ukb_vqtl/output/simulation/power_fpr_plots2.png'
g2 <- ggplot(subset(df.aggre.melt,noise=='NORMAL' & type=='gxg' & variable%in%c('LT','DRM')),aes(x=h,y=value,col=variable)) + geom_line() + geom_point(size=rel(0.8)) + theme_bw() + theme(panel.grid = element_blank()) + labs(x='Variance explained by interaction effect',y='Power') + scale_color_brewer(palette='Dark2')+ theme(legend.title = element_blank())
g3 <- ggplot(subset(df.aggre.melt,noise=='CHISQ4' & type=='gxg' & variable%in%c('LT','DRM')),aes(x=h,y=value,col=variable)) + geom_line() + geom_point(size=rel(0.8)) + theme_bw() + theme(panel.grid = element_blank()) + labs(x='Variance explained by interaction effect',y='Power') + scale_color_brewer(palette='Dark2')+ theme(legend.title = element_blank())
f='~/Documents/Research/vQTL/ukb_vqtl/output/simulation/power_fpr_plots2.png'
# png(f,width=3750,height=1000,res=500)
# plot_grid(g2,g3,nrow=1)
png(f,width=2500,height=2500,res=500)
plot_grid(g2,g3,ncol=1)
dev.off()
library(data.table)
df <- list()
workdir <- '/Users/andrewmarderstein/Documents/Research/vQTL/ukb_vqtl/output/simulation/'
MAF1=0.4
for (i in 1:5) {
nindiv=i*10000
f <- paste0(workdir,'MAF1_',MAF1,'.MAF2_0.4.NSIM_1000.NINDIV_',nindiv,'.TYPE_gxg.NOISE_NORMAL.txt')
df[[i]] <- fread(f,data.table = F,stringsAsFactors = F)
}
df <- do.call(rbind,df)
df.aggre <- aggregate(.~MAF1+MAF2+N+noise+h+type,df,function(x) {mean(x < 0.05)})
mean(subset(df.aggre,N==10000 & h <= 0.05)$DRM) / mean(subset(df.aggre,N==10000 & h <= 0.05)$LT)
mean(subset(df.aggre,N==nindiv & h <= 0.03)$DRM) / mean(subset(df.aggre,N==nindiv & h <= 0.03)$LT)
library(ggplot2)
ggplot(subset(df.aggre,h<=0.03),aes(h,N)) + geom_tile(aes(fill=DRM),col='white') +
geom_text(aes(label=DRM)) +
scale_fill_gradient(low = "white", high = "steelblue",name='Power') +
theme_bw()  + theme(panel.grid = element_blank()) + #,legend.title = element_blank()) +
labs(x='Variance explained by interaction effect',y='Sample Size') + scale_y_continuous(breaks=seq(min(df.aggre$N),max(df.aggre$N),by=10000))
df.aggre <- aggregate(.~MAF1+MAF2+N+noise+h+type,df,function(x) {mean(x < 0.05)})
g <- ggplot(subset(df.aggre,h<=0.03),aes(N,h)) + geom_tile(aes(fill=DRM),col='white') +
geom_text(aes(label=format(DRM,nsmall=3))) +
scale_fill_gradient(low = "white", high = "steelblue",name='Power') +
theme_bw()  + theme(panel.grid = element_blank()) + #,legend.title = element_blank()) +
labs(y='Variance explained by interaction effect',x='Sample Size') + scale_x_continuous(breaks=seq(min(df.aggre$N),max(df.aggre$N),by=10000)) +
theme(axis.title = element_text(size = rel(1.2)),legend.position = 'none')
x=1
png('~/Documents/Research/vQTL/ukb_vqtl/output/simulation/power_heatmap.png',width=5000*x,height=4000*x,res=700*x)
print(g)
dev.off()
# ggplot(df.mg,aes(x=as.factor(h),y=beta,fill=noise)) + geom_boxplot(alpha=0.5) + theme_bw() + theme(panel.grid = element_blank()) + labs(x='Variance Explained by GxG',y=expression(beta['var']))# +
gA <- ggplot(subset(df.mg,noise=='NORMAL' & type=='gxg'),aes(x=as.factor(h),y=beta,fill=h)) + geom_boxplot(alpha=0.5) + theme_bw() + theme(panel.grid = element_blank(),legend.position = 'none') + labs(x='Variance explained by simulated GxG',y=expression(beta['var'])) +
scale_fill_continuous(low='yellow',high='red')
gA
# ggplot(df.mg,aes(x=as.factor(h),y=beta,fill=noise)) + geom_boxplot(alpha=0.5) + theme_bw() + theme(panel.grid = element_blank()) + labs(x='Variance Explained by GxG',y=expression(beta['var']))# +
gA <- ggplot(subset(df.mg,noise=='NORMAL' & type=='gxg'),aes(x=as.factor(h),y=beta,fill=h)) + geom_boxplot(alpha=0.5) + theme_bw() + theme(panel.grid = element_blank(),legend.position = 'none') + labs(x='Variance explained by mean SNP effect',y=expression(beta['var'])) +
scale_fill_continuous(low='yellow',high='red')
gB <- ggplot(subset(df.mg,noise=='NORMAL' & type=='mean'),aes(x=as.factor(h),y=beta,fill=h)) + geom_boxplot(alpha=0.5) + theme_bw() + theme(panel.grid = element_blank(),legend.position = 'none') + labs(x='Variance explained by interaction effect',y=expression(beta['var'])) +
scale_fill_continuous(low='yellow',high='red')
f='~/Documents/Research/vQTL/ukb_vqtl/output/simulation/variance_explained_by_vqtl_beta.png'
png(f,width=4000,height=4000,res=500)
plot_grid(gA,gB,ncol=1)
dev.off()
library(data.table)
library(ggplot2)
library(cowplot)
library(reshape2)
# parameters
MAF1 <- 0.4
MAF2 <- 0.4
nsim <- 1000;
nindiv <- 10000
simulation_type='gxg'
genetic_variance_explained.vec <- seq(0.01,0.1,by=0.01);
phenotype_noise <- 'NORMAL'
dir='/Users/andrewmarderstein/Documents/Research/vQTL/ukb_vqtl/output/simulation/'
f=paste0(dir,'MAF1_',MAF1,'.MAF2_',MAF2,'.NSIM_',nsim,'.NINDIV_',nindiv,'.TYPE_',simulation_type,'.NOISE_',phenotype_noise,'.txt')
df <- fread(f,data.table = F,stringsAsFactors = F)
ggplot(df,aes(x=as.factor(h),y=beta,fill=h)) + geom_boxplot(alpha=0.5) + theme_bw() + theme(panel.grid = element_blank(),legend.position = 'none') + labs(x='Variance Explained by GxG',y=expression(beta['var'])) +
# scale_color_continuous(low='orange',high='blue')
scale_fill_continuous(low='yellow',high='red')
df.aggre <- aggregate(.~MAF1+MAF2+N+noise+h+type,df[,-c(7)],function(x) {mean(x < 0.05)})
df.aggre.melt <- melt(df.aggre[,c(5,7:ncol(df.aggre))],id.vars='h')
ggplot(df.aggre.melt,aes(x=h,y=value,col=variable)) + geom_line() + geom_point() + theme_bw() + theme(panel.grid = element_blank()) + labs(x='Variance Explained by GxG',y='Power')
phenotype_noise <- 'CHISQ4'
dir='/Users/andrewmarderstein/Documents/Research/vQTL/ukb_vqtl/output/simulation/'
f=paste0(dir,'MAF1_',MAF1,'.MAF2_',MAF2,'.NSIM_',nsim,'.NINDIV_',nindiv,'.TYPE_',simulation_type,'.NOISE_',phenotype_noise,'.txt')
df <- fread(f,data.table = F,stringsAsFactors = F)
ggplot(df,aes(x=as.factor(h),y=beta,fill=h)) + geom_boxplot(alpha=0.5) + theme_bw() + theme(panel.grid = element_blank(),legend.position = 'none') + labs(x='Variance Explained by GxG',y=expression(beta['var'])) +
# scale_color_continuous(low='orange',high='blue')
scale_fill_continuous(low='yellow',high='red')
df.aggre <- aggregate(.~MAF1+MAF2+N+noise+h+type,df[,-c(7)],function(x) {mean(x < 0.05)})
df.aggre.melt <- melt(df.aggre[,c(5,7:ncol(df.aggre))],id.vars='h')
ggplot(df.aggre.melt,aes(x=h,y=value,col=variable)) + geom_line() + geom_point() + theme_bw() + theme(panel.grid = element_blank()) + labs(x='Variance Explained by GxG',y='Power')
ggplot(df,aes(x=as.factor(h),y=beta,fill=h)) + geom_boxplot(alpha=0.5) + theme_bw() + theme(panel.grid = element_blank(),legend.position = 'none') + labs(x='Variance Explained by GxG',y=expression(beta['var'])) +
# scale_color_continuous(low='orange',high='blue')
scale_fill_continuous(low='yellow',high='red')
qq_ggplot <- function(pvector,maxy=NULL) {
o = -log10(sort(pvector, decreasing = FALSE))
e = -log10(ppoints(length(pvector)))
dataf <- data.frame(e,o)
if (is.null(maxy)) {maxy=max(o)}
g <- ggplot(dataf,aes(x=e,y=o)) + geom_point() + geom_abline(slope=1,intercept=0,col='red') +
labs(x=expression(Expected ~ ~-log[10](italic(p))),y=expression(Observed ~ ~-log[10](italic(p)))) +
theme_bw() + theme(panel.grid = element_blank()) + ylim(0,maxy)
return(g)
}
f <- paste0('/Users/andrewmarderstein/Documents/Research/vQTL/ukb_vqtl/output/sig_results/bmi.sig.GxE.txt')
GxE <- fread(f,data.table = F,stringsAsFactors = F)
g.qtl <- qq_ggplot(GxE$`Pr(>|t|).x`)
f <- paste0('/Users/andrewmarderstein/Documents/Research/vQTL/ukb_vqtl/output/sig_results/bmi.matched_QTL.GxE.txt')
matched <- fread(f,data.table = F,stringsAsFactors = F)
g.matched <- qq_ggplot(matched$`Pr(>|t|).x`,maxy=-log10(min(GxE$`Pr(>|t|).x`)))
f <- '/Users/andrewmarderstein/Documents/Research/vQTL/ukb_vqtl/output/GxE/GxE_results/bmi.GxE.discovery.qqplots.png'
png(f,width=4890,height=2240,res=700)
plot_grid(g.qtl,g.matched,ncol=2)
dev.off()
val <- -log10(min(subset(GxE,Raw.vQTL==1)$`Pr(>|t|).x`))
g.vqtl <- qq_ggplot(subset(GxE,Raw.vQTL==1)$`Pr(>|t|).x`,val)
g.muqtl <- qq_ggplot(subset(GxE,Mean.QTL==1 & Raw.vQTL==0)$`Pr(>|t|).x`,val)
g.rintqtl <- qq_ggplot(subset(GxE,Rint.vQTL==1 & Raw.vQTL==0)$`Pr(>|t|).x`,val)
g.dqtl <- qq_ggplot(subset(GxE,dQTL==1 & Raw.vQTL==0)$`Pr(>|t|).x`,val)
f <- '/Users/andrewmarderstein/Documents/Research/vQTL/ukb_vqtl/output/GxE/GxE_results/bmi.GxE.discovery.qqplots.split.png'
png(f,width=9780,height=2240,res=700)
plot_grid(g.vqtl,g.muqtl,g.rintqtl,g.dqtl,ncol=4)
dev.off()
f <- '/Users/andrewmarderstein/Documents/Research/vQTL/ukb_vqtl/output/GxE/GxE_results/bmi.GxE.discovery.qqplots.main_text.png'
png(f,width=8000,height=2240,res=700)
plot_grid(g.matched,g.qtl,g.vqtl,g.muqtl,ncol=4)
dev.off()
png(f,width=7000,height=2240,res=700)
plot_grid(g.matched,g.qtl,g.vqtl,g.muqtl,ncol=4)
dev.off()
f <- '/Users/andrewmarderstein/Documents/Research/vQTL/ukb_vqtl/output/GxE/GxE_results/bmi.GxE.discovery.qqplots.main_text.png'
png(f,width=7000,height=2240,res=700)
plot_grid(g.matched,g.qtl,g.muqtl,g.vqtl,ncol=4)
dev.off()
qq_ggplot <- function(pvector,maxy=NULL,labs=TRUE) {
o = -log10(sort(pvector, decreasing = FALSE))
e = -log10(ppoints(length(pvector)))
dataf <- data.frame(e,o)
if (is.null(maxy)) {maxy=max(o)}
if (!labs) {
g <- ggplot(dataf,aes(x=e,y=o)) + geom_point() + geom_abline(slope=1,intercept=0,col='red') +
theme_bw() + theme(panel.grid = element_blank(),axis.title = element_blank()) + ylim(0,maxy)
} else {
g <- ggplot(dataf,aes(x=e,y=o)) + geom_point() + geom_abline(slope=1,intercept=0,col='red') +
labs(x=expression(Expected ~ ~-log[10](italic(p))),y=expression(Observed ~ ~-log[10](italic(p)))) +
theme_bw() + theme(panel.grid = element_blank()) + ylim(0,maxy)
}
return(g)
}
g.matched <- qq_ggplot(matched$`Pr(>|t|).x`,maxy=-log10(min(GxE$`Pr(>|t|).x`)),labs=F)
g.matched
g.matched <- qq_ggplot(matched$`Pr(>|t|).x`,maxy=-log10(min(GxE$`Pr(>|t|).x`)),labs=F)
g.qtl <- qq_ggplot(GxE$`Pr(>|t|).x`,labs=F)
g.muqtl <- qq_ggplot(subset(GxE,Mean.QTL==1 & Raw.vQTL==0)$`Pr(>|t|).x`,val,labs=F)
g.vqtl <- qq_ggplot(subset(GxE,Raw.vQTL==1)$`Pr(>|t|).x`,val,labs=F)
f <- '/Users/andrewmarderstein/Documents/Research/vQTL/ukb_vqtl/output/GxE/GxE_results/bmi.GxE.discovery.qqplots.main_text.png'
png(f,width=7000,height=2240,res=700)
plot_grid(g.matched,g.qtl,g.muqtl,g.vqtl,ncol=4)
dev.off()
pvector=subset(GxE,Raw.vQTL==1)$`Pr(>|t|).x`
pvector
o = -log10(sort(pvector, decreasing = FALSE))
e = -log10(ppoints(length(pvector)))
min(e)
max(e)
min(e)
-log10(e)
max(-log10(e))
seq(0,max(-log10(e)),by=1)
g <- ggplot(dataf,aes(x=e,y=o)) + geom_point() + geom_abline(slope=1,intercept=0,col='red') +
theme_bw() + theme(panel.grid = element_blank(),axis.title = element_blank()) + ylim(0,maxy) +
scale_x_continuous(seq(0,max(-log10(e)),by=1))
dataf <- data.frame(e,o)
g <- ggplot(dataf,aes(x=e,y=o)) + geom_point() + geom_abline(slope=1,intercept=0,col='red') +
theme_bw() + theme(panel.grid = element_blank(),axis.title = element_blank()) + ylim(0,maxy) +
scale_x_continuous(seq(0,max(-log10(e)),by=1))
seq(0,max(-log10(e)),by=1)
qq_ggplot <- function(pvector,maxy=NULL,labs=TRUE) {
o = -log10(sort(pvector, decreasing = FALSE))
e = -log10(ppoints(length(pvector)))
dataf <- data.frame(e,o)
if (is.null(maxy)) {maxy=max(o)}
if (!labs) {
g <- ggplot(dataf,aes(x=e,y=o)) + geom_point() + geom_abline(slope=1,intercept=0,col='red') +
theme_bw() + theme(panel.grid = element_blank(),axis.title = element_blank()) + ylim(0,maxy) +
scale_x_continuous(breaks=seq(0,max(-log10(e)),by=1))
} else {
g <- ggplot(dataf,aes(x=e,y=o)) + geom_point() + geom_abline(slope=1,intercept=0,col='red') +
labs(x=expression(Expected ~ ~-log[10](italic(p))),y=expression(Observed ~ ~-log[10](italic(p)))) +
theme_bw() + theme(panel.grid = element_blank()) + ylim(0,maxy) +
scale_x_continuous(breaks=seq(0,max(-log10(e)),by=1))
}
return(g)
}
g.matched <- qq_ggplot(matched$`Pr(>|t|).x`,maxy=-log10(min(GxE$`Pr(>|t|).x`)),labs=F)
g.qtl <- qq_ggplot(GxE$`Pr(>|t|).x`,labs=F)
g.muqtl <- qq_ggplot(subset(GxE,Mean.QTL==1 & Raw.vQTL==0)$`Pr(>|t|).x`,val,labs=F)
g.vqtl <- qq_ggplot(subset(GxE,Raw.vQTL==1)$`Pr(>|t|).x`,val,labs=F)
f <- '/Users/andrewmarderstein/Documents/Research/vQTL/ukb_vqtl/output/GxE/GxE_results/bmi.GxE.discovery.qqplots.main_text.png'
png(f,width=7000,height=2240,res=700)
plot_grid(g.matched,g.qtl,g.muqtl,g.vqtl,ncol=4)
dev.off()
f <- '/Users/andrewmarderstein/Documents/Research/vQTL/ukb_vqtl/output/GxE/GxE_results/bmi.GxE.discovery.qqplots.main_text.png'
png(f,width=6000,height=2240,res=700)
plot_grid(g.matched,g.qtl,g.muqtl,g.vqtl,ncol=4)
dev.off()
library(data.table)
library(ggplot2)
library(cowplot)
scaleFUN <- function(x) sprintf("%.0f", x)
f <- paste0('/Users/andrewmarderstein/Documents/Research/vQTL/ukb_vqtl/output/GxE/GxE_results/bmi.GxE.valid.matched.txt')
df.matched <- fread(f,data.table = F,stringsAsFactors = F);
df.matched$FDR_based <- 1; df.matched$FDR_based[df.matched$thres %in% c(1,0.1,0.05,0.01,0.005,0.001)] <- 0
g1<-ggplot(subset(df.matched,thres <= 0.05 & N >= 5),aes(x=-log10(thres),y=p)) + geom_line() + geom_point(aes(col=as.factor(FDR_based))) + theme_bw() +
labs(title='') + scale_color_manual(values=c('black','red')) +
geom_ribbon(aes(ymin=lower,ymax=upper),linetype=2,alpha=0.1) + ylim(0,1) + geom_hline(yintercept=0.025,linetype='dashed',col='red') +
theme(axis.title=element_blank(),panel.grid = element_blank(),legend.position = 'none')+
scale_x_continuous(breaks=c(1:5)) + xlim(-log10(0.05),5)
f <- paste0('/Users/andrewmarderstein/Documents/Research/vQTL/ukb_vqtl/output/GxE/GxE_results/bmi.GxE.valid.QTL.txt')
df.QTL <- fread(f,data.table = F,stringsAsFactors = F);
df.QTL$FDR_based <- 1; df.QTL$FDR_based[df.QTL$thres %in% c(1,0.1,0.05,0.01,0.005,0.001)] <- 0
g2<-ggplot(subset(df.QTL,thres <= 0.05 & N >= 5),aes(x=-log10(thres),y=p)) + geom_line() + geom_point(aes(col=as.factor(FDR_based))) + theme_bw() +
labs(title='') + scale_color_manual(values=c('black','red')) +
geom_ribbon(aes(ymin=lower,ymax=upper),linetype=2,alpha=0.1) + ylim(0,1) + geom_hline(yintercept=0.025,linetype='dashed',col='red') +
theme(axis.title=element_blank(),panel.grid = element_blank(),legend.position = 'none')+
scale_x_continuous(breaks=c(1:5)) + xlim(-log10(0.05),5)
f <- paste0('/Users/andrewmarderstein/Documents/Research/vQTL/ukb_vqtl/output/GxE/GxE_results/bmi.GxE.valid.only_mean.txt')
df.mean_only <- fread(f,data.table = F,stringsAsFactors = F);
df.mean_only$FDR_based <- 1; df.mean_only$FDR_based[df.mean_only$thres %in% c(1,0.1,0.05,0.01,0.005,0.001)] <- 0
g3<-ggplot(subset(df.mean_only,thres <= 0.05 & N >= 5),aes(x=-log10(thres),y=p)) + geom_line() + geom_point(aes(col=as.factor(FDR_based))) + theme_bw() +
labs(title='') + scale_color_manual(values=c('black','red')) +
geom_ribbon(aes(ymin=lower,ymax=upper),linetype=2,alpha=0.1) + ylim(0,1) + geom_hline(yintercept=0.025,linetype='dashed',col='red') +
theme(axis.title=element_blank(),panel.grid = element_blank(),legend.position = 'none') +
scale_x_continuous(breaks=c(1:5)) + xlim(-log10(0.05),5)
f <- paste0('/Users/andrewmarderstein/Documents/Research/vQTL/ukb_vqtl/output/GxE/GxE_results/bmi.GxE.valid.var_raw.txt')
df.var_raw <- fread(f,data.table = F,stringsAsFactors = F);
df.var_raw$FDR_based <- 1; df.var_raw$FDR_based[df.var_raw$thres %in% c(1,0.1,0.05,0.01,0.005,0.001)] <- 0
g4<-ggplot(subset(df.var_raw,thres <= 0.05 & N >= 5),aes(x=-log10(thres),y=p)) + geom_line() + geom_point(aes(col=as.factor(FDR_based))) + theme_bw() +
labs(title='') + scale_color_manual(values=c('black','red')) +
geom_ribbon(aes(ymin=lower,ymax=upper),linetype=2,alpha=0.1) + ylim(0,1) + geom_hline(yintercept=0.025,linetype='dashed',col='red') +
theme(axis.title=element_blank(),panel.grid = element_blank(),legend.position = 'none')+
scale_x_continuous(breaks=c(1:5)) + xlim(-log10(0.05),5)
x=1
f <- paste0('/Users/andrewmarderstein/Documents/Research/vQTL/ukb_vqtl/output/GxE/GxE_results/GxE_valid.final_panel.png')
png(f,width = 3000,height=1000,res=300)
plot_grid(g1,g2,g3,g4,nrow=1)
dev.off()
x=1
x=1
f <- paste0('/Users/andrewmarderstein/Documents/Research/vQTL/ukb_vqtl/output/GxE/GxE_results/bmi.GxE.discovery_and_validation.final.png')
png(f,width = 3000,height=2000,res=300)
plot_grid(g1,g2,g3,g4,
g.matched,g.qtl,g.muqtl,g.vqtl,
nrow=2,ncol=4)
dev.off()
plot_grid(g.matched,g.qtl,g.muqtl,g.vqtl,
g1,g2,g3,g4,
nrow=2,ncol=4)
dev.off()
f <- paste0('/Users/andrewmarderstein/Documents/Research/vQTL/ukb_vqtl/output/GxE/GxE_results/bmi.GxE.discovery_and_validation.final.png')
png(f,width = 3000,height=2000,res=300)
plot_grid(g.matched,g.qtl,g.muqtl,g.vqtl,
g1,g2,g3,g4,
nrow=2,ncol=4)
dev.off()
nrow(subset(GxE,Mean.QTL==1 & Raw.vQTL==0))
nrow(subset(GxE,Raw.vQTL==1))
3136/7
147/7
library(ggplot2)
library(data.table)
k=1
results.list <- list()
for (k in 1:2) {
set.seed(03191995)
phenotype_noise <- phenotype_noise.vec[k]
simulation_results <- lapply(1:length(genetic_variance_explained.vec),runSimulation,type=simulation_type)
results <- do.call(rbind,lapply(simulation_results,function(x){x[[1]]}))
results <- as.data.frame(results,stringsAsFactors = FALSE)
#1
results$LR_p.reject <- (results$LR_p<0.05)
results$DRM_p.reject <- (results$DRM_p<0.05)
results.list[[k]] <- results
}
results.save <- do.call(rbind,results.list)
tmp <- list(); i = 0
for (pheno_noise in c('NORMAL','CHISQ4')) {
for (val in c(0.01,0.02,0.03)) {
i=i+1
results.sub <- subset(results.save,h==val & noise==pheno_noise)
tab <- table(results.sub[,c('LR_p.reject','DRM_p.reject')])
P=(fisher.test(tab)$p.value)
POWER1=tab[1,2]/(tab[1,1]+tab[1,2])
POWER2=tab[2,2]/(tab[2,1]+tab[2,2])
tmp[[i]] <- data.frame(noise=pheno_noise,h=val,P,POWER1,POWER2)
}
}
tmp.full <- do.call(rbind,tmp)
library(reshape2)
tmp.save <- melt(tmp.full[,c(1,2,4,5)],id.vars=c('noise','h'))
tmp.save$Name <- paste(tmp.save$noise,tmp.save$h,sep=': h = ')
tmp.save$Name <- factor(tmp.save$Name,tmp.save$Name[1:6])
g <- ggplot(tmp.save,aes(x=Name,y=value,fill=variable)) +
geom_bar(stat='identity',position = 'dodge',col='black') +
theme_bw() +
labs(x='Simulation',y='vQTL power',fill='muQTL?') +
theme(panel.grid = element_blank(),
axis.text.x = element_text(hjust=1,angle=30)) +
scale_fill_manual(values=c('black','steelblue2'),labels=c('No','Yes')) +
scale_x_discrete(labels=c(expression('Normal, '*V[G]*'=0.01'),
expression('Normal, '*V[G]*'=0.02'),
expression('Normal, '*V[G]*'=0.03'),
expression('Non-normal,'*V[G]*'=0.01'),
expression('Non-normal,'*V[G]*'=0.02'),
expression('Non-normal,'*V[G]*'=0.03')
)) +
scale_y_continuous(breaks=c(0,0.25,0.5,0.75,1),limits=c(0,1.1))
# lims(y=c(0,1.1));
library(ggplot2)
library(data.table)
k=1
results.list <- list()
for (k in 1:2) {
set.seed(03191995)
phenotype_noise <- phenotype_noise.vec[k]
simulation_results <- lapply(1:length(genetic_variance_explained.vec),runSimulation,type=simulation_type)
results <- do.call(rbind,lapply(simulation_results,function(x){x[[1]]}))
results <- as.data.frame(results,stringsAsFactors = FALSE)
#1
results$LR_p.reject <- (results$LR_p<0.05)
results$DRM_p.reject <- (results$DRM_p<0.05)
results.list[[k]] <- results
}
library(data.table)
f <- '~/Documents/Research/vQTL/ukb_vqtl/output/other/simulated_var_gxg_fpr.txt'
res.df <- fread(f,data.table = F,stringsAsFactors = F)
dim(res.df)
head(res.df)
res.df.sub <- subset(res.df,P.VAR < 0.05)
library(ggplot2)
g1=ggplot(res.df.sub,aes(x=BETA.VAR,y=BETA.GxG)) + geom_point() + geom_smooth(method = 'lm',se=F) + theme_bw() + theme(panel.grid=element_blank()) + labs(x=expression(beta['var']),y=expression(beta['GxG']))
g2=ggplot(res.df,aes(x=BETA.VAR,y=BETA.GxG)) + geom_point() + geom_smooth(method = 'lm',se=F) + theme_bw() + theme(panel.grid=element_blank()) + labs(x=expression(beta['var']),y=expression(beta['GxG']))
cor.test(res.df.sub$BETA.VAR,res.df.sub$BETA.GxG)
cor.test(res.df$BETA.VAR,res.df$BETA.GxG)
g3=ggplot(res.df.sub,aes(x=-log10(P.VAR),y=-log10(P.GxG))) + geom_point() + geom_smooth(method = 'lm',se=F) + theme_bw() + theme(panel.grid=element_blank()) +
labs(x='-log10 variance p-values',y='-log10 interaction p-values')
g4=ggplot(res.df,aes(x=-log10(P.VAR),y=-log10(P.GxG))) + geom_point() + geom_smooth(method = 'lm',se=F) + theme_bw() + theme(panel.grid=element_blank()) +
labs(x='-log10 variance p-values',y='-log10 interaction p-values')
cor.test(-log10(res.df.sub$P.VAR),-log10(res.df.sub$P.GxG))
cor.test(-log10(res.df$P.VAR),-log10(res.df$P.GxG))
library(cowplot)
plot_grid(g2,g1,g4,g3,ncol=2)
res.df.sub <- subset(res.df,P.VAR < 0.05)
library(ggplot2)
g1=ggplot(res.df.sub,aes(x=BETA.VAR,y=BETA.GxG)) + geom_point() + geom_smooth(method = 'lm',se=F) + theme_bw() + theme(panel.grid=element_blank()) + labs(x=expression(beta['var']),y=expression(beta['interaction']))
g2=ggplot(res.df,aes(x=BETA.VAR,y=BETA.GxG)) + geom_point() + geom_smooth(method = 'lm',se=F) + theme_bw() + theme(panel.grid=element_blank()) + labs(x=expression(beta['var']),y=expression(beta['interaction']))
cor.test(res.df.sub$BETA.VAR,res.df.sub$BETA.GxG)
cor.test(res.df$BETA.VAR,res.df$BETA.GxG)
g3=ggplot(res.df.sub,aes(x=-log10(P.VAR),y=-log10(P.GxG))) + geom_point() + geom_smooth(method = 'lm',se=F) + theme_bw() + theme(panel.grid=element_blank()) +
labs(x='-log10 variance p-values',y='-log10 interaction p-values')
g4=ggplot(res.df,aes(x=-log10(P.VAR),y=-log10(P.GxG))) + geom_point() + geom_smooth(method = 'lm',se=F) + theme_bw() + theme(panel.grid=element_blank()) +
labs(x='-log10 variance p-values',y='-log10 interaction p-values')
library(cowplot)
plot_grid(g2,g1,g4,g3,ncol=2)
g3=ggplot(res.df.sub,aes(x=-log10(P.VAR),y=-log10(P.GxG))) + geom_point() + geom_smooth(method = 'lm',se=F) + theme_bw() + theme(panel.grid=element_blank()) +
labs(x=expression(-log[10](italic(P)['var'])),y='-log10 interaction p-values')
g3
g3=ggplot(res.df.sub,aes(x=-log10(P.VAR),y=-log10(P.GxG))) + geom_point() + geom_smooth(method = 'lm',se=F) + theme_bw() + theme(panel.grid=element_blank()) +
labs(x=expression(-log[10](italic(P)['var'])),y=expression(-log[10](italic(P)['interaction'])))
g3
g3=ggplot(res.df.sub,aes(x=-log10(P.VAR),y=-log10(P.GxG))) + geom_point() + geom_smooth(method = 'lm',se=F) + theme_bw() + theme(panel.grid=element_blank()) +
labs(x=expression(-log[10](italic(P)['var'])),y=expression(-log[10](italic(P)['interaction'])))
g4=ggplot(res.df,aes(x=-log10(P.VAR),y=-log10(P.GxG))) + geom_point() + geom_smooth(method = 'lm',se=F) + theme_bw() + theme(panel.grid=element_blank()) +
labs(x=expression(-log[10](italic(P)['var'])),y=expression(-log[10](italic(P)['interaction'])))
res.df.sub <- subset(res.df,P.VAR < 0.05)
library(ggplot2)
g1=ggplot(res.df.sub,aes(x=BETA.VAR,y=BETA.GxG)) + geom_point() + geom_smooth(method = 'lm',se=F) + theme_bw() + theme(panel.grid=element_blank()) + labs(x=expression(beta['var']),y=expression(beta['interaction']))
g2=ggplot(res.df,aes(x=BETA.VAR,y=BETA.GxG)) + geom_point() + geom_smooth(method = 'lm',se=F) + theme_bw() + theme(panel.grid=element_blank()) + labs(x=expression(beta['var']),y=expression(beta['interaction']))
cor.test(res.df.sub$BETA.VAR,res.df.sub$BETA.GxG)
cor.test(res.df$BETA.VAR,res.df$BETA.GxG)
g3=ggplot(res.df.sub,aes(x=-log10(P.VAR),y=-log10(P.GxG))) + geom_point() + geom_smooth(method = 'lm',se=F) + theme_bw() + theme(panel.grid=element_blank()) +
labs(x=expression(-log[10](italic(P)['var'])),y=expression(-log[10](italic(P)['interaction'])))
g4=ggplot(res.df,aes(x=-log10(P.VAR),y=-log10(P.GxG))) + geom_point() + geom_smooth(method = 'lm',se=F) + theme_bw() + theme(panel.grid=element_blank()) +
labs(x=expression(-log[10](italic(P)['var'])),y=expression(-log[10](italic(P)['interaction'])))
cor.test(-log10(res.df.sub$P.VAR),-log10(res.df.sub$P.GxG))
cor.test(-log10(res.df$P.VAR),-log10(res.df$P.GxG))
library(cowplot)
plot_grid(g2,g1,g4,g3,ncol=2)
library(data.table)
df.Neale <- fread('~/Documents/Research/vQTL/UKB/21001_raw.gwas.imputed_v3.both_sexes.chr1.txt',data.table = F,stringsAsFactors = F)
df.mean <- fread('~/Documents/Research/vQTL/ukb_vqtl/output/imputed/results/ukbb.bmi.ALL.results.txt',data.table = F,stringsAsFactors = F)
df.mean.tmp <- df.mean
df.Neale <- fread('~/Documents/Research/vQTL/UKB/21001_raw.gwas.imputed_v3.both_sexes.chr1.txt',data.table = F,stringsAsFactors = F)
df.Neale <- fread('~/Documents/Research/vQTL/UKB/21001_raw.gwas.imputed_v3.both_sexes.chr1.txt',data.table = F,stringsAsFactors = F)
df.Neale <- fread('~/Documents/Research/vQTL/UKB/21001_raw.gwas.imputed_v3.both_sexes.chr1.txt',data.table = F,stringsAsFactors = F)
df.mean.tmp <- df.mean
df.mean$Neale_SNP <- apply(df.mean[,c('CHR','BP','A2','A1')],1,function(x) paste(as.character(x),collapse = ':'))
df.mean.tmp$Neale_SNP <- apply(df.mean.tmp[,c('CHR','BP','A1','A2')],1,function(x) paste(as.character(x),collapse = ':'))
df.mean <- rbind(df.mean,df.mean.tmp)
df.mean$Neale_SNP <- str_replace_all(df.mean$Neale_SNP,' ','')
df.mg=merge(df.mean,df.Neale,by.x='Neale_SNP',by.y='variant')
i=which(df.mg$A1!=df.mg$minor_allele)
df.mg$beta[i] <- -df.mg$beta[i]
library(ggplot2)
library(stringr)
df.mean$Neale_SNP <- str_replace_all(df.mean$Neale_SNP,' ','')
df.mg=merge(df.mean,df.Neale,by.x='Neale_SNP',by.y='variant')
i=which(df.mg$A1!=df.mg$minor_allele)
df.mg$beta[i] <- -df.mg$beta[i]
library(ggplot2)
dim(df.mg)
cor(-log10(df.mg$P),-log10(df.mg$pval))
