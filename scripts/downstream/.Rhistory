x <- apply(df.sub.5,2,sum); df.sub.5 <- df.sub.5[,-which(x==0)]
x <-3; p <- pheatmap(df.sub.5,cluster_cols = T,cluster_rows=T,show_colnames = F,
legend=T,treeheight_row = 50, treeheight_col = 0,border_color='black',
cellwidth = rel(1.2*x),cellheight=rel(4*x),filename="~/Documents/Research/GTEx/Infiltration/TissueHotHeatMap.png")
x <-3; p <- pheatmap(df.sub.5,cluster_cols = T,cluster_rows=T,show_colnames = F,
legend=F,treeheight_row = 50, treeheight_col = 0,border_color='black',
cellwidth = rel(1.2*x),cellheight=rel(4*x),filename="~/Documents/Research/GTEx/Infiltration/TissueHotHeatMap.png")
CellType.unique
i=2
i=2
df.sub <- subset(df,CellType==CellType.unique[i])
x <- aggregate(df.sub$IID,list(df.sub$IID),length)
df.sub <- subset(df.sub,x >= 8)
df.sub <- df.sub[,c('IID','Tissue','Top')]
# df.sub$Top <- as.factor(df.sub$Top)
library(reshape2)
df.sub.2 <- dcast(df.sub,IID~Tissue)
df.sub.3 <- melt(df.sub.2,id.vars = 'IID',na.rm = F)
colnames(df.sub.3) <- c('IID','Tissue','Top')
df.sub.3$Top[which(is.na(df.sub.3$Top))] <- 0
df.sub.4 <- dcast(df.sub.3,IID~Tissue)
library(pheatmap)
library(matrixStats)
rownames(df.sub.2) <- df.sub.2[,1]; df.sub.2 <- df.sub.2[,-1]
df.sub <- subset(df,CellType==CellType.unique[i])
x <- aggregate(df.sub$IID,list(df.sub$IID),length)
df.sub <- subset(df.sub,x >= 8)
df.sub <- df.sub[,c('IID','Tissue','Top')]
# df.sub$Top <- as.factor(df.sub$Top)
library(reshape2)
df.sub.2 <- dcast(df.sub,IID~Tissue)
df.sub.3 <- melt(df.sub.2,id.vars = 'IID',na.rm = F)
colnames(df.sub.3) <- c('IID','Tissue','Top')
df.sub.3$Top[which(is.na(df.sub.3$Top))] <- 0
df.sub.4 <- dcast(df.sub.3,IID~Tissue)
library(pheatmap)
library(matrixStats)
rownames(df.sub.4) <- df.sub.4[,1]; df.sub.4 <- df.sub.4[,-1]
df.sub.5 <- as.data.frame(t(df.sub.4))
x <- apply(df.sub.5,2,sum); df.sub.5 <- df.sub.5[,-which(x==0)]
x <-3; p <- pheatmap(df.sub.5,cluster_cols = T,cluster_rows=T,show_colnames = F,
legend=F,treeheight_row = 50, treeheight_col = 0,border_color='black',
cellwidth = rel(1.2*x),cellheight=rel(4*x),filename="~/Documents/Research/GTEx/Infiltration/TissueHotHeatMap.png")
i=7
i=7 # 2
df.sub <- subset(df,CellType==CellType.unique[i])
x <- aggregate(df.sub$IID,list(df.sub$IID),length)
df.sub <- subset(df.sub,x >= 8)
df.sub <- df.sub[,c('IID','Tissue','Top')]
# df.sub$Top <- as.factor(df.sub$Top)
library(reshape2)
df.sub.2 <- dcast(df.sub,IID~Tissue)
df.sub.3 <- melt(df.sub.2,id.vars = 'IID',na.rm = F)
colnames(df.sub.3) <- c('IID','Tissue','Top')
df.sub.3$Top[which(is.na(df.sub.3$Top))] <- 0
df.sub.4 <- dcast(df.sub.3,IID~Tissue)
library(pheatmap)
library(matrixStats)
# rownames(df.sub.2) <- df.sub.2[,1]; df.sub.2 <- df.sub.2[,-1]
# df.sub.2 <- df.sub.2[1:40,1:19]
# pheatmap(df.sub.2,cluster_rows=F,cluster_cols=F)
# pheatmap(df.sub.2,cluster_cols = F)
rownames(df.sub.4) <- df.sub.4[,1]; df.sub.4 <- df.sub.4[,-1]
# df.sub.4 <- df.sub.4[1:40,1:19]
# pheatmap(df.sub.2,cluster_rows=F,cluster_cols=F)
# pheatmap(t(df.sub.4),cluster_cols = T,cluster_rows=T,show_colnames = F,legend=F)
df.sub.5 <- as.data.frame(t(df.sub.4))
x <- apply(df.sub.5,2,sum); df.sub.5 <- df.sub.5[,-which(x==0)]
x <-3; p <- pheatmap(df.sub.5,cluster_cols = T,cluster_rows=T,show_colnames = F,
legend=F,treeheight_row = 50, treeheight_col = 0,border_color='black',
cellwidth = rel(1.2*x),cellheight=rel(4*x),filename="~/Documents/Research/GTEx/Infiltration/TissueHotHeatMap.png")
for (i in 1:8) {
df.sub <- subset(df,CellType==CellType.unique[i])
x <- aggregate(df.sub$IID,list(df.sub$IID),length)
df.sub <- subset(df.sub,x >= 8)
df.sub <- df.sub[,c('IID','Tissue','Top')]
# df.sub$Top <- as.factor(df.sub$Top)
library(reshape2)
df.sub.2 <- dcast(df.sub,IID~Tissue)
df.sub.3 <- melt(df.sub.2,id.vars = 'IID',na.rm = F)
colnames(df.sub.3) <- c('IID','Tissue','Top')
df.sub.3$Top[which(is.na(df.sub.3$Top))] <- 0
df.sub.4 <- dcast(df.sub.3,IID~Tissue)
rownames(df.sub.4) <- df.sub.4[,1]; df.sub.4 <- df.sub.4[,-1]
df.sub.5 <- as.data.frame(t(df.sub.4))
x <- apply(df.sub.5,2,sum); df.sub.5 <- df.sub.5[,-which(x==0)]
f <- paste0('~/Documents/Research/GTEx/Infiltration/TissueHotHeatMap.',CellType.unique[i],'.png')
x <-3; p <- pheatmap(df.sub.5,cluster_cols = T,cluster_rows=T,show_colnames = F,
legend=F,treeheight_row = 50, treeheight_col = 0,border_color='black',
cellwidth = rel(1.2*x),cellheight=rel(4*x),filename=f)
}
df.sub <- subset(df,CellType==CellType.unique[i] & Top==1)
tab <- aggregate(df.sub$Top,by=list(df.sub$IID),sum)
i
# tab <- aggregate(df.sub$Bottom,by=list(df.sub$IID),mean)
tab2 <- aggregate(df.sub$Top,by=list(df.sub$IID),length)
colnames(tab) <- c('IID','Sum')
colnames(tab2) <- c('IID','N')
tab <- merge(tab,tab2,by='IID')
tab <- subset(tab,Sum>0 & N >= 8)
dataf[[i]] <- as.data.frame(tab)
ggplot(dataf[[i]],aes(x=Sum)) +
# geom_bar(fill='orange3') +
geom_density(fill='orange3') +
geom_vline(xintercept = val[[i]],col='red',lty='dashed') +
labs(x='Proportion of "hot" tissue samples',y='Number of individuals',title=paste0(CellType.names[i],' (N=',length(unique(df.sub$Tissue)),'; n=',val2[[i]],')'))+
theme_bw() + scale_x_continuous(breaks=c(0,0.25,0.5,0.75,1),limits = c(-0.1,1.1)) +
theme(plot.title=element_text(hjust=0.5))
dataf[[i]] <- as.data.frame(tab)
val[[i]] <- median(dataf[[i]]$Sum)
val2[[i]] <- median(dataf[[i]]$N)
ggplot(dataf[[i]],aes(x=Sum)) +
# geom_bar(fill='orange3') +
geom_density(fill='orange3') +
geom_vline(xintercept = val[[i]],col='red',lty='dashed') +
labs(x='Proportion of "hot" tissue samples',y='Number of individuals',title=paste0(CellType.names[i],' (N=',length(unique(df.sub$Tissue)),'; n=',val2[[i]],')'))+
theme_bw() + scale_x_continuous(breaks=c(0,0.25,0.5,0.75,1),limits = c(-0.1,1.1)) +
theme(plot.title=element_text(hjust=0.5))
dataf[[i]]
df.sub <- subset(df,CellType==CellType.unique[i] & Top==1)
tab <- aggregate(df.sub$Top,by=list(df.sub$IID),sum)
# tab <- aggregate(df.sub$Bottom,by=list(df.sub$IID),mean)
tab2 <- aggregate(df.sub$Top,by=list(df.sub$IID),length)
colnames(tab) <- c('IID','Sum')
colnames(tab2) <- c('IID','N')
tab <- merge(tab,tab2,by='IID')
tab
# tab <- aggregate(df.sub$Bottom,by=list(df.sub$IID),mean)
tab2 <- aggregate(df.sub$Top,by=list(df.sub$IID),length)
colnames(tab) <- c('IID','Sum')
# tab <- aggregate(df.sub$Bottom,by=list(df.sub$IID),mean)
colnames(tab) <- c('IID','Sum')
dataf[[i]] <- as.data.frame(tab)
val[[i]] <- median(dataf[[i]]$Sum)
df.sub <- subset(df,CellType==CellType.unique[i])
tab <- aggregate(df.sub$Top,by=list(df.sub$IID),sum)
# tab <- aggregate(df.sub$Bottom,by=list(df.sub$IID),mean)
tab2 <- aggregate(df.sub$Top,by=list(df.sub$IID),length)
colnames(tab) <- c('IID','Sum')
colnames(tab2) <- c('IID','N')
tab <- merge(tab,tab2,by='IID')
head(tab)
tab <- subset(tab,Sum>0 & N >= 8)
dataf[[i]] <- as.data.frame(tab)
val[[i]] <- median(dataf[[i]]$Sum)
val2[[i]] <- median(dataf[[i]]$N)
ggplot(dataf[[i]],aes(x=Sum)) +
# geom_bar(fill='orange3') +
geom_density(fill='orange3') +
geom_vline(xintercept = val[[i]],col='red',lty='dashed') +
labs(x='Proportion of "hot" tissue samples',y='Number of individuals',title=paste0(CellType.names[i],' (N=',length(unique(df.sub$Tissue)),'; n=',val2[[i]],')'))+
theme_bw() + scale_x_continuous(breaks=c(0,0.25,0.5,0.75,1),limits = c(-0.1,1.1)) +
theme(plot.title=element_text(hjust=0.5))
dataf[[i]]
plot(rnorm(5))
f
x <- rnorm(1000)
e <- rnorm(1000)
y <- x + 2*e
library(pROC)
x <- rnorm(1000)
e <- rnorm(1000)
y <- x + 2*e
mod <- glm(y~x,family=binomial(link='logit'))
library(pROC)
auc(glm)
x <- rnorm(1000)
e <- rnorm(1000)
y <- x + 2*e
mod <- glm(y~x,family=binomial(link='logit'))
quantile(y)
quantile(y,probs = 0.9)
as.numeric(y > quantile(y,probs = 0.9))
y <- as.numeric(y > quantile(y,probs = 0.9))
mod <- glm(y~x,family=binomial(link='logit'))
library(pROC)
auc(glm)
auc(mod)
?auc
auc(y,mod$fitted.values)
x <- rbinom(1000,size = 2,prob=0.4) # snp w/ MAF = 0.4
e <- rnorm(1000) # environmental factor
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit'))
library(pROC)
auc(y,mod$fitted.values)
x <- rbinom(1000,size = 2,prob=0.4) # snp w/ MAF = 0.4
e <- rnorm(1000) # environmental factor
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit'))
library(pROC)
auc(y,mod$fitted.values)
x <- rbinom(1000,size = 2,prob=0.4) # snp w/ MAF = 0.4
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and snp
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rbinom(1000,size = 2,prob=0.4) # snp w/ MAF = 0.4
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and snp
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rbinom(1000,size = 2,prob=0.4) # snp w/ MAF = 0.4
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and snp
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rbinom(1000,size = 2,prob=0.4) # snp w/ MAF = 0.4
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and snp
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rbinom(1000,size = 2,prob=0.4) # snp w/ MAF = 0.4
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and snp
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rbinom(1000,size = 2,prob=0.4) # snp w/ MAF = 0.4
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and snp
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rbinom(1000,size = 2,prob=0.4) # snp w/ MAF = 0.4
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and snp
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rbinom(1000,size = 2,prob=0.4) # snp w/ MAF = 0.4
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and snp
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rbinom(1000,size = 2,prob=0.4) # snp w/ MAF = 0.4
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and snp
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rbinom(1000,size = 2,prob=0.4) # snp w/ MAF = 0.4
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and snp
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rbinom(1000,size = 2,prob=0.4) # snp w/ MAF = 0.4
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and snp
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rbinom(1000,size = 2,prob=0.4) # snp w/ MAF = 0.4
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and snp
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rbinom(1000,size = 2,prob=0.4) # snp w/ MAF = 0.4
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and snp
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rbinom(1000,size = 2,prob=0.4) # snp w/ MAF = 0.4
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and snp
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rbinom(1000,size = 2,prob=0.4) # snp w/ MAF = 0.4
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and snp
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rbinom(1000,size = 2,prob=0.4) # snp w/ MAF = 0.4
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and snp
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rbinom(1000,size = 2,prob=0.4) # snp w/ MAF = 0.4
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and snp
library(pROC)
auc(y,mod$fitted.values) # calculate auc
?roc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 2*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 3*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 3*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 3*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 3*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 4*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 4*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 4*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 4*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 4*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 4*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 4*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 4*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 4*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 4*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 4*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical phenotype
mod <- glm(y~x,family=binomial(link='logit')) # model fit between disease and polygenic score
library(pROC)
auc(y,mod$fitted.values) # calculate auc
predict(mod)
predict(mod,newdata = x)
?predict.glm
predict(mod,newdata = data.frame(x=x))
?auc
auc(y,mod$fitted.values) # calculate auc in khera et al
auc(mod$fitted.values,y) # calculate auc in khera et al
auc(mod$fitted.values,y) # calculate auc in khera et al
auc(y,mod$fitted.values) # calculate auc in khera et al
# held out set
x <- rnorm(1000) # polygenic score
e <- rnorm(1000) # unknown environmental factor, noise
y <- x + 4*e # underlying continuous spectrum of disease
y <- as.numeric(y > quantile(y,probs = 0.9)) # clinical disease phenotype
mod.prediction <- predict(mod,newdata = data.frame(x=x))
auc(y,mod.prediction) # calculate auc in held out set using model fit from previous cohort
